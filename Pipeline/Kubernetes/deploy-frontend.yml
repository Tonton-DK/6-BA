apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: basic-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "INGRESSCOOKIE"
    nginx.ingress.kubernetes.io/session-cookie-expires: "172800"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "172800"
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/session-cookie-hash: sha1
spec:
  defaultBackend:
    service:
      name: frontend
      port:
        number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  ports:
    -
      name: http
      port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app: frontend-pod
  sessionAffinity: ClientIP
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend-pod
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: frontend-pod
    spec:
      containers:
        -
          image: "ghcr.io/antje12/ba/frontend:{IMG_TAG}"
          imagePullPolicy: Always
          name: frontend
          ports:
            -
              containerPort: 80
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 3
      imagePullSecrets:
        -
          name: regcred
